import { JoyrideStep } from '../models/joyride-step.class';
import { JoyrideBackdropService } from './joyride-backdrop.service';
import { EventListenerService } from './event-listener.service';
import { JoyrideStepsContainerService, StepActionType } from './joyride-steps-container.service';
import { DocumentService } from './document.service';
import { StepDrawerService } from './step-drawer.service';
import { DomRefService } from './dom.service';
import { JoyrideOptionsService } from './joyride-options.service';
import { Router } from '@angular/router';
import { ReplaySubject, Observable } from 'rxjs';
import { JoyrideStepInfo } from '../models/joyride-step-info.class';
import { LoggerService } from './logger.service';
export declare const DISTANCE_FROM_TARGET = 15;
export declare const ARROW_SIZE = 10;
export interface IJoyrideStepService {
    startTour(): Observable<JoyrideStepInfo>;
    close(): any;
    prev(): any;
    next(): any;
}
export declare class JoyrideStepService implements IJoyrideStepService {
    protected readonly backDropService: JoyrideBackdropService;
    protected readonly eventListener: EventListenerService;
    protected readonly stepsContainerService: JoyrideStepsContainerService;
    protected readonly documentService: DocumentService;
    protected readonly DOMService: DomRefService;
    protected readonly stepDrawerService: StepDrawerService;
    protected readonly optionsService: JoyrideOptionsService;
    protected readonly router: Router;
    protected readonly logger: LoggerService;
    protected currentStep: JoyrideStep;
    protected winTopPosition: number;
    protected winBottomPosition: number;
    protected stepsObserver: ReplaySubject<JoyrideStepInfo>;
    constructor(backDropService: JoyrideBackdropService, eventListener: EventListenerService, stepsContainerService: JoyrideStepsContainerService, documentService: DocumentService, DOMService: DomRefService, stepDrawerService: StepDrawerService, optionsService: JoyrideOptionsService, router: Router, logger: LoggerService);
    protected initViewportPositions(): void;
    protected subscribeToScrollEvents(): void;
    protected subscribeToResizeEvents(): void;
    protected drawStep(step: JoyrideStep): void;
    startTour(): Observable<JoyrideStepInfo>;
    close(): void;
    prev(): void;
    next(): void;
    protected navigateToStepPage(action: StepActionType): void;
    protected subscribeToStepsUpdates(): void;
    protected tryShowStep(actionType: StepActionType): void;
    protected showStep(actionType: StepActionType): void;
    protected notifyStepClicked(actionType: StepActionType): void;
    protected notifyTourIsFinished(): void;
    protected removeCurrentStep(): void;
    protected scrollIfStepAndTargetAreNotVisible(): void;
    protected scrollWhenTargetOrStepAreHiddenBottom(): void;
    protected scrollWhenTargetOrStepAreHiddenTop(): void;
    protected getMaxTargetAndStepBottomPosition(): number;
    protected getMaxTargetAndStepTopPosition(): any;
    protected scrollIfElementBeyondOtherElements(): void;
    protected isElementBeyondOthers(): 1 | 2 | 3;
    refreshTour(): void;
}

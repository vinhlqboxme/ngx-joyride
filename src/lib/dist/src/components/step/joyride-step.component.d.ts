import { AfterViewInit, OnInit, OnDestroy, ElementRef, Renderer2, Injector, TemplateRef } from '@angular/core';
import { JoyrideStep } from '../../models/joyride-step.class';
import { IJoyrideStepService } from '../../services/joyride-step.service';
import { JoyrideStepsContainerService } from '../../services/joyride-steps-container.service';
import { EventListenerService } from '../../services/event-listener.service';
import { Subscription, Observable } from 'rxjs';
import { DocumentService } from '../../services/document.service';
import { JoyrideOptionsService } from '../../services/joyride-options.service';
import { LoggerService } from '../../services/logger.service';
import { TemplatesService } from '../../services/templates.service';
export declare const DEFAULT_DISTANCE_FROM_MARGIN_TOP = 2;
export declare const DEFAULT_DISTANCE_FROM_MARGIN_LEFT = 2;
export declare class JoyrideStepComponent implements OnInit, OnDestroy, AfterViewInit {
    protected injector: Injector;
    protected readonly stepsContainerService: JoyrideStepsContainerService;
    protected readonly eventListenerService: EventListenerService;
    protected readonly documentService: DocumentService;
    protected readonly renderer: Renderer2;
    protected readonly logger: LoggerService;
    protected readonly optionsService: JoyrideOptionsService;
    protected readonly templateService: TemplatesService;
    stepWidth: number;
    stepHeight: number;
    leftPosition: number;
    topPosition: number;
    showArrow: boolean;
    arrowPosition: string;
    arrowLeftPosition: number;
    arrowTopPosition: number;
    title: Observable<string>;
    text: Observable<string>;
    counter: string;
    isCounterVisible: boolean;
    isPrevButtonVisible: boolean;
    themeColor: string;
    customContent: TemplateRef<any>;
    customPrevButton: TemplateRef<any>;
    customNextButton: TemplateRef<any>;
    customDoneButton: TemplateRef<any>;
    customCounter: TemplateRef<any>;
    counterData: any;
    ctx: Object;
    protected arrowSize: number;
    protected stepAbsoluteLeft: number;
    protected stepAbsoluteTop: number;
    protected targetWidth: number;
    targetHeight: number;
    protected targetAbsoluteLeft: number;
    protected targetAbsoluteTop: number;
    protected subscriptions: Subscription[];
    joyrideStepService: IJoyrideStepService;
    protected positionAlreadyFixed: boolean;
    protected documentHeight: number;
    prevText: Observable<string>;
    nextText: Observable<string>;
    doneText: Observable<string>;
    step?: JoyrideStep;
    stepHolder: ElementRef;
    stepContainer: ElementRef;
    constructor(injector: Injector, stepsContainerService: JoyrideStepsContainerService, eventListenerService: EventListenerService, documentService: DocumentService, renderer: Renderer2, logger: LoggerService, optionsService: JoyrideOptionsService, templateService: TemplatesService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    protected checkRedraw(val: any): void;
    protected isCustomized(): TemplateRef<any>;
    protected setCustomTexts(): void;
    protected drawStep(): void;
    protected getCounter(): string;
    protected setCustomTemplates(): void;
    prev(): void;
    next(): void;
    close(): void;
    isFirstStep(): boolean;
    isLastStep(): boolean;
    protected setStepStyle(): void;
    protected setStyleTop(): void;
    protected setStyleRight(): void;
    protected setStyleBottom(): void;
    protected setStyleLeft(): void;
    protected setStyleCenter(): void;
    protected adjustLeftPosition(): void;
    protected adjustRightPosition(): void;
    protected adjustTopPosition(): void;
    protected adjustBottomPosition(): void;
    protected autofixTopPosition(): void;
    protected autofixRightPosition(): void;
    protected autofixBottomPosition(): void;
    protected autofixLeftPosition(): void;
    protected subscribeToResizeEvents(): Subscription;
    protected redrawStep(): void;
    protected getDimensionsByAspectRatio(width: number, height: number, aspectRatio: number): {
        width: number;
        height: number;
    };
    protected adjustDimensions(width: number, height: number): {
        width: number;
        height: number;
    };
    protected updateStepDimensions(): void;
    ngOnDestroy(): void;
}

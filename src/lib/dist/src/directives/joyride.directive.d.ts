import { ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import { JoyrideStep } from '../models/joyride-step.class';
import { JoyrideStepsContainerService } from '../services/joyride-steps-container.service';
import { Router } from '@angular/router';
import { DomRefService } from '../services/dom.service';
import { TemplatesService } from '../services/templates.service';
import { Observable, Subscription } from 'rxjs';
export declare const NO_POSITION = "NO_POSITION";
export declare class JoyrideDirective implements AfterViewInit, OnChanges, OnDestroy {
    protected readonly joyrideStepsContainer: JoyrideStepsContainerService;
    protected viewContainerRef: ViewContainerRef;
    protected readonly domService: DomRefService;
    protected readonly router: Router;
    protected readonly templateService: TemplatesService;
    protected platformId: Object;
    name: string;
    nextStep?: string;
    title?: string | Observable<string>;
    text?: string | Observable<string>;
    stepPosition?: string;
    stepContent?: TemplateRef<any>;
    stepContentParams?: Object;
    prevTemplate?: TemplateRef<any>;
    nextTemplate?: TemplateRef<any>;
    doneTemplate?: TemplateRef<any>;
    counterTemplate?: TemplateRef<any>;
    prev?: EventEmitter<any>;
    next?: EventEmitter<any>;
    done?: EventEmitter<any>;
    protected windowRef: Window;
    protected step: JoyrideStep;
    protected subscriptions: Subscription[];
    constructor(joyrideStepsContainer: JoyrideStepsContainerService, viewContainerRef: ViewContainerRef, domService: DomRefService, router: Router, templateService: TemplatesService, platformId: Object);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    protected isElementFixed(element: ElementRef): boolean;
    protected setAsyncFields(step: JoyrideStep): void;
    protected isAncestorsFixed(nativeElement: any): boolean;
    ngOnDestroy(): void;
}
